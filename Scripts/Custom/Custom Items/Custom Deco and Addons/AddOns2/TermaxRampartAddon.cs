
////////////////////////////////////////
//                                    //
//   Generated by CEO's YAAAG - V1.2  //
// (Yet Another Arya Addon Generator) //
//                                    //
////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class TermaxRampartAddon : BaseAddon
	{
        private static int[,] m_AddOnSimpleComponents = new int[,] {
			  {3729, 0, 2, 5}, {3730, 0, 1, 5}, {3731, 0, 0, 5}// 1	2	3	
			, {1928, 0, 0, 0}, {1928, 1, 0, 0}, {1928, 2, 0, 0}// 4	5	6	
			, {1928, 2, 1, 0}, {1928, 2, 2, 0}, {1928, 1, 2, 0}// 7	8	9	
			, {1928, 0, 2, 0}, {1928, 0, 1, 0}, {1928, 1, 1, 0}// 10	11	12	
			, {1928, 2, -1, 0}, {1928, 1, -1, 0}, {1928, -1, -1, 0}// 13	14	15	
			, {1928, 0, -1, 0}, {1928, -1, 0, 0}, {1928, -1, 1, 0}// 16	17	18	
			, {1928, -1, 2, 0}, {465, -2, 0, 5}, {465, -2, -1, 5}// 19	20	21	
			, {466, -2, -2, 5}, {3729, 2, 2, 5}, {3730, 2, 1, 5}// 22	23	24	
			, {3731, 2, 0, 5}, {479, -2, 2, 5}, {5480, -1, -1, 5}// 25	26	27	
			, {5481, 0, -1, 5}, {5478, -1, 0, 5}, {5479, -1, -1, 5}// 28	29	30	
			, {3700, 0, -1, 6}, {3700, 2, -1, 6}, {465, -2, 1, 5}// 31	32	33	
			, {1928, -1, -2, 0}, {1928, 0, -2, 0}, {1928, 1, -2, 0}// 36	37	38	
			, {1928, 2, -2, 0}, {477, 2, -2, 5}, {464, 1, -2, 5}// 39	40	41	
			, {464, 0, -2, 5}, {464, -1, -2, 5}, {1935, 3, -2, 0}// 42	43	44	
			, {1930, 3, -1, 0}, {1928, -2, 2, 0}, {480, 2, -2, 25}// 45	46	47	
			, {482, 1, -2, 25}, {485, -2, 2, 25}, {484, -2, 1, 25}// 48	49	50	
			, {1928, 3, 2, 0}, {1930, 3, 0, 0}, {1930, 3, 1, 0}// 51	52	53	
			, {480, 1, -2, 25}, {482, 0, -2, 25}, {482, -1, -2, 25}// 54	55	56	
			, {480, 0, -2, 25}, {481, -2, 1, 25}, {481, -2, 0, 25}// 57	58	59	
			, {484, -2, 0, 25}, {484, -2, -1, 25}, {485, -2, -1, 25}// 60	61	62	
			, {483, -1, -2, 25}, {474, -2, -2, 40}, {5384, -1, 1, 2}// 63	64	65	
			, {466, -2, -2, 21}, {474, 0, -2, 25}, {474, -2, 0, 25}// 66	70	71	
			, {474, 1, -2, 25}, {474, -2, 1, 25}// 72	73	
		};

 
            
		public override BaseAddonDeed Deed
		{
			get
			{
				return new TermaxRampartAddonDeed();
			}
		}

		[ Constructable ]
		public TermaxRampartAddon()
		{

            for (int i = 0; i < m_AddOnSimpleComponents.Length / 4; i++)
                AddComponent( new AddonComponent( m_AddOnSimpleComponents[i,0] ), m_AddOnSimpleComponents[i,1], m_AddOnSimpleComponents[i,2], m_AddOnSimpleComponents[i,3] );


			AddComplexComponent( (BaseAddon) this, 2573, 1, -1, 19, 0, 1, "", 1);// 34
			AddComplexComponent( (BaseAddon) this, 2567, -1, 1, 18, 0, 0, "", 1);// 35
			AddComplexComponent( (BaseAddon) this, 5590, -2, -1, 30, 37, -1, "", 1);// 67
			AddComplexComponent( (BaseAddon) this, 5591, -1, -2, 30, 37, -1, "", 1);// 68
			AddComplexComponent( (BaseAddon) this, 5368, -1, -1, 6, 0, -1, "cannon fuse", 1);// 69

		}

		public TermaxRampartAddon( Serial serial ) : base( serial )
		{
		}

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource)
        {
            AddComplexComponent(addon, item, xoffset, yoffset, zoffset, hue, lightsource, null, 1);
        }

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource, string name, int amount)
        {
            AddonComponent ac;
            ac = new AddonComponent(item);
            if (name != null && name.Length > 0)
                ac.Name = name;
            if (hue != 0)
                ac.Hue = hue;
            if (amount > 1)
            {
                ac.Stackable = true;
                ac.Amount = amount;
            }
            if (lightsource != -1)
                ac.Light = (LightType) lightsource;
            addon.AddComponent(ac, xoffset, yoffset, zoffset);
        }

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class TermaxRampartAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new TermaxRampartAddon();
			}
		}

		[Constructable]
		public TermaxRampartAddonDeed()
		{
			Name = "TermaxRampart";
		}

		public TermaxRampartAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}