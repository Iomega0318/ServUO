/////////////////////////////////////////////////
//                                             //
// Automatically generated by the              //
// AddonGenerator script by Arya               //
//                                             //
/////////////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class NewFirepitRockAddon : BaseAddon
	{
		public override BaseAddonDeed Deed
		{
			get
			{
				return new NewFirepitRockAddonDeed();
			}
		}

		[ Constructable ]
		public NewFirepitRockAddon()
		{
			AddonComponent ac;
			ac = new AddonComponent( 952 );
			ac.Name = "firepit";
			AddComponent( ac, 1, 1, 0 );
			ac = new AddonComponent( 953 );
			ac.Name = "firepit";
			AddComponent( ac, 1, 0, 0 );
			ac = new AddonComponent( 953 );
			ac.Name = "firepit";
			AddComponent( ac, -1, 0, 0 );
			ac = new AddonComponent( 953 );
			ac.Name = "firepit";
			AddComponent( ac, -1, 1, 0 );
			ac = new AddonComponent( 954 );
			ac.Name = "firepit";
			AddComponent( ac, 0, 1, 0 );
			ac = new AddonComponent( 954 );
			ac.Name = "firepit";
			AddComponent( ac, 0, -1, 0 );
			ac = new AddonComponent( 954 );
			AddComponent( ac, 1, -1, 0 );
			ac = new AddonComponent( 1981 );
			ac.Hue = 1109;
			ac.Name = "firepit";
			AddComponent( ac, 0, 1, 0 );
			ac = new AddonComponent( 1981 );
			ac.Hue = 1109;
			ac.Name = "firepit";
			AddComponent( ac, 0, 0, 0 );
			ac = new AddonComponent( 1981 );
			ac.Hue = 1109;
			ac.Name = "firepit";
			AddComponent( ac, 1, 0, 0 );
			ac = new AddonComponent( 1981 );
			ac.Hue = 1109;
			ac.Name = "firepit";
			AddComponent( ac, 1, 1, 0 );
			ac = new AddonComponent( 956 );
			ac.Name = "firepit";
			AddComponent( ac, -1, -1, 0 );
			ac = new AddonComponent( 7137 );
			AddComponent( ac, 1, 1, 8 );
			ac = new AddonComponent( 7134 );
			AddComponent( ac, 1, 1, 10 );
			ac = new AddonComponent( 7137 );
			AddComponent( ac, 1, 1, 11 );
			ac = new AddonComponent( 3561 );
			ac.Light = LightType.Circle225;
			AddComponent( ac, 1, 1, 8 );
			ac = new AddonComponent( 3561 );
			ac.Light = LightType.Circle225;
			AddComponent( ac, 0, 1, 6 );
			ac = new AddonComponent( 3561 );
			ac.Light = LightType.Circle225;
			AddComponent( ac, 1, 1, 14 );
			ac = new AddonComponent( 3561 );
			ac.Light = LightType.Circle225;
			AddComponent( ac, 1, 1, 18 );
			ac = new AddonComponent( 3561 );
			ac.Light = LightType.Circle225;
			AddComponent( ac, 1, 0, 7 );
			ac = new AddonComponent( 6571 );
			ac.Light = LightType.Circle225;
			AddComponent( ac, 1, 1, 11 );
			ac = new AddonComponent( 6571 );
			ac.Light = LightType.Circle225;
			AddComponent( ac, 1, 1, 15 );

		}

		public NewFirepitRockAddon( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class NewFirepitRockAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new NewFirepitRockAddon();
			}
		}

		[Constructable]
		public NewFirepitRockAddonDeed()
		{
			Name = "NewFirepitRock";
		}

		public NewFirepitRockAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}