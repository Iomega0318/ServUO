
////////////////////////////////////////
//                                    //
//   Generated by CEO's YAAAG - V1.2  //
// (Yet Another Arya Addon Generator) //
//                                    //
////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class JapaneseCounterAddon : BaseAddon
	{
        private static int[,] m_AddOnSimpleComponents = new int[,] {
			  {10294, 2, -1, 5}, {10296, -1, -1, 12}, {4568, 2, -1, 2}// 5	6	12	
			, {10316, -1, -1, 7}, {10305, 0, -1, 8}, {10318, -2, 0, 8}// 13	14	15	
			, {9441, -2, 1, 7}, {9440, 1, -1, 7}, {4568, -2, 1, 2}// 16	17	21	
					};

 
            
		public override BaseAddonDeed Deed
		{
			get
			{
				return new JapaneseCounterAddonDeed();
			}
		}

		[ Constructable ]
		public JapaneseCounterAddon()
		{

            for (int i = 0; i < m_AddOnSimpleComponents.Length / 4; i++)
                AddComponent( new AddonComponent( m_AddOnSimpleComponents[i,0] ), m_AddOnSimpleComponents[i,1], m_AddOnSimpleComponents[i,2], m_AddOnSimpleComponents[i,3] );


			AddComplexComponent( (BaseAddon) this, 4568, -1, -1, 2, 0, -1, "Bamboo Mat", 1);// 1
			AddComplexComponent( (BaseAddon) this, 4583, -2, 1, 5, 1996, -1, "Woven Mat", 1);// 2
			AddComplexComponent( (BaseAddon) this, 9405, -2, -1, 8, 0, 1, "", 1);// 3
			AddComplexComponent( (BaseAddon) this, 2722, 0, -1, 10, 0, -1, "Japanese Counter", 1);// 4
			AddComplexComponent( (BaseAddon) this, 4568, 1, -1, 2, 0, -1, "Bamboo Mat", 1);// 7
			AddComplexComponent( (BaseAddon) this, 2722, -1, -1, 10, 0, -1, "Japanese Counter", 1);// 8
			AddComplexComponent( (BaseAddon) this, 4568, -2, -1, 2, 0, -1, "Bamboo Mat", 1);// 9
			AddComplexComponent( (BaseAddon) this, 4583, 2, -1, 4, 1996, -1, "Woven Mat", 1);// 10
			AddComplexComponent( (BaseAddon) this, 2818, -2, -1, 0, 1510, -1, "", 1);// 11
			AddComplexComponent( (BaseAddon) this, 2823, -2, 0, 0, 0, -1, "Japanese Counter", 1);// 18
			AddComplexComponent( (BaseAddon) this, 4568, 0, -1, 2, 0, -1, "Bamboo Mat", 1);// 19
			AddComplexComponent( (BaseAddon) this, 2816, 2, -1, 0, 1510, -1, "Japanese Counter", 1);// 20
			AddComplexComponent( (BaseAddon) this, 2721, -2, 0, 12, 0, -1, "Japanese Counter", 1);// 22
			AddComplexComponent( (BaseAddon) this, 2822, -2, 1, 0, 1510, -1, "Japanese Counter", 1);// 23
			AddComplexComponent( (BaseAddon) this, 2721, -2, 1, 12, 0, -1, "Japanese Counter", 1);// 24
			AddComplexComponent( (BaseAddon) this, 2817, 1, -1, 0, 0, -1, "Japanese Counter", 1);// 25
			AddComplexComponent( (BaseAddon) this, 2817, 0, -1, 0, 0, -1, "Japanese Counter", 1);// 26
			AddComplexComponent( (BaseAddon) this, 4568, -2, 0, 2, 0, -1, "Bamboo Mat", 1);// 27
			AddComplexComponent( (BaseAddon) this, 2450, -2, 1, 6, 2101, -1, "", 1);// 28
			AddComplexComponent( (BaseAddon) this, 2817, -1, -1, 0, 0, -1, "Japanese Counter", 1);// 29

		}

		public JapaneseCounterAddon( Serial serial ) : base( serial )
		{
		}

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource)
        {
            AddComplexComponent(addon, item, xoffset, yoffset, zoffset, hue, lightsource, null, 1);
        }

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource, string name, int amount)
        {
            AddonComponent ac;
            ac = new AddonComponent(item);
            if (name != null && name.Length > 0)
                ac.Name = name;
            if (hue != 0)
                ac.Hue = hue;
            if (amount > 1)
            {
                ac.Stackable = true;
                ac.Amount = amount;
            }
            if (lightsource != -1)
                ac.Light = (LightType) lightsource;
            addon.AddComponent(ac, xoffset, yoffset, zoffset);
        }

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class JapaneseCounterAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new JapaneseCounterAddon();
			}
		}

		[Constructable]
		public JapaneseCounterAddonDeed()
		{
			Name = "JapaneseCounter";
		}

		public JapaneseCounterAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}