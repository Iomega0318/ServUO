
////////////////////////////////////////
//                                    //
//   Generated by CEO's YAAAG - V1.2  //
// (Yet Another Arya Addon Generator) //
//                                    //
////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class SwampBridgeAddon : BaseAddon
	{
        private static int[,] m_AddOnSimpleComponents = new int[,] {
			  {12809, 0, -3, 0}, {12885, 2, -3, 0}, {12809, -5, -3, 0}// 3	4	6	
			, {12927, -6, -3, 0}, {12924, -4, -3, 0}, {12915, -3, -3, 0}// 7	8	9	
			, {12915, -2, -3, 0}, {12930, -7, -3, 0}, {12904, -1, 0, 0}// 10	11	12	
			, {12904, 0, -1, 0}, {12904, 1, 0, 0}, {12904, 2, -1, 0}// 13	14	15	
			, {12889, 2, 0, 0}, {12889, -1, -1, 0}, {12890, 0, 0, 0}// 16	17	18	
			, {12893, 1, -1, 0}, {12891, -1, -2, 0}, {12892, 2, 1, 0}// 19	20	21	
			, {12893, 0, -2, 0}, {12894, 1, -2, 0}, {12895, 2, -2, 0}// 22	23	24	
			, {12896, 1, 1, 0}, {12901, 0, 1, 0}, {12903, -1, 1, 0}// 25	26	27	
			, {12910, -2, -1, 0}, {12901, -2, -2, 0}, {12901, -2, 0, 0}// 28	29	30	
			, {12900, -2, 1, 0}, {12900, -3, -2, 0}, {12903, -3, -1, 0}// 31	32	33	
			, {12901, -3, 0, 0}, {12809, -3, 1, 0}, {12809, -4, -1, 0}// 34	37	38	
			, {12889, -4, 0, 0}, {12890, -4, -2, 0}, {1217, 1, -2, 5}// 39	40	41	
			, {1217, 1, -1, 5}, {1217, 1, 0, 5}, {1217, 1, 1, 5}// 42	43	44	
			, {1217, 0, -2, 5}, {1217, 0, -1, 5}, {1217, 0, 0, 5}// 45	46	47	
			, {1217, 0, 1, 5}, {12889, -4, 1, 0}, {12889, -5, 0, 0}// 48	49	50	
			, {12810, -5, -1, 0}, {12888, -5, -2, 0}, {12877, -5, 1, 0}// 51	52	53	
			, {2300, 1, -1, 5}, {2300, 1, 0, 5}, {2300, 1, 1, 5}// 55	56	58	
			, {12809, -5, 2, 0}, {12809, -6, 1, 0}, {1217, -1, -2, 5}// 60	61	62	
			, {1217, -1, -1, 5}, {1217, -1, 0, 5}, {1217, -1, 1, 5}// 63	64	65	
			, {12888, -6, 0, 0}, {12889, -6, -1, 0}, {12890, -6, -2, 0}// 66	68	70	
			, {2300, -2, 1, 5}, {2300, -2, 1, 5}, {2300, -2, -1, 5}// 71	72	73	
			, {12918, -7, -2, 0}, {12918, -7, -1, 0}, {12918, -7, 0, 0}// 74	75	76	
			, {12918, -7, 1, 0}, {12917, 2, 2, 0}, {12925, -4, 2, 0}// 77	78	79	
			, {12917, -3, 2, 0}, {12917, -2, 2, 0}, {12923, -7, 2, 0}// 80	81	82	
			, {12917, -5, 3, 0}, {12926, -6, 2, 0}, {12931, -6, 3, 0}// 83	92	93	
			, {12932, -4, 3, 0}, {12888, 5, -3, 0}, {12885, 3, -3, 0}// 94	95	96	
			, {12933, 7, -3, 0}, {12927, 4, -3, 0}, {12924, 6, -3, 0}// 97	98	99	
			, {12903, 3, 0, 0}, {12895, 3, -1, 0}, {12889, 4, 0, 0}// 100	101	102	
			, {12890, 4, -1, 0}, {12893, 3, 1, 0}, {12894, 4, 1, 0}// 103	104	105	
			, {12900, 3, -2, 0}, {12903, 4, -2, 0}, {12809, 5, 0, 0}// 106	107	108	
			, {12889, 5, -1, 0}, {12890, 5, -2, 0}, {12888, 5, 2, 0}// 109	110	111	
			, {12890, 6, -2, 0}, {12890, 6, 1, 0}, {12889, 6, -1, 0}// 112	113	114	
			, {12889, 6, 0, 0}, {12912, 7, -2, 0}, {12912, 7, -1, 0}// 115	116	117	
			, {12912, 7, 0, 0}, {12912, 7, 1, 0}, {12917, 3, 2, 0}// 118	119	120	
			, {12917, 5, 3, 0}, {12925, 6, 2, 0}, {12854, 5, 1, 0}// 121	122	123	
			, {12932, 6, 3, 0}, {12926, 4, 2, 0}, {12931, 4, 3, 0}// 124	125	126	
			, {12932, 7, 2, 0}// 127	
		};

 
            
		public override BaseAddonDeed Deed
		{
			get
			{
				return new SwampBridgeAddonDeed();
			}
		}

		[ Constructable ]
		public SwampBridgeAddon()
		{

            for (int i = 0; i < m_AddOnSimpleComponents.Length / 4; i++)
                AddComponent( new AddonComponent( m_AddOnSimpleComponents[i,0] ), m_AddOnSimpleComponents[i,1], m_AddOnSimpleComponents[i,2], m_AddOnSimpleComponents[i,3] );


			AddComplexComponent( (BaseAddon) this, 1828, 1, -3, 0, 1044, -1, "", 1);// 1
			AddComplexComponent( (BaseAddon) this, 1828, 0, -3, 0, 1044, -1, "", 1);// 2
			AddComplexComponent( (BaseAddon) this, 1828, -1, -3, 0, 1044, -1, "", 1);// 5
			AddComplexComponent( (BaseAddon) this, 1826, 1, 2, 0, 1044, -1, "", 1);// 35
			AddComplexComponent( (BaseAddon) this, 1826, 0, 2, 0, 1044, -1, "", 1);// 36
			AddComplexComponent( (BaseAddon) this, 2008, 1, -2, 5, 1044, -1, "", 1);// 54
			AddComplexComponent( (BaseAddon) this, 2296, 1, 2, 5, 1044, -1, "", 1);// 57
			AddComplexComponent( (BaseAddon) this, 1826, -1, 2, 0, 1044, -1, "", 1);// 59
			AddComplexComponent( (BaseAddon) this, 2008, -2, -2, 5, 1044, -1, "", 1);// 67
			AddComplexComponent( (BaseAddon) this, 2296, -2, 2, 5, 1044, -1, "", 1);// 69
			AddComplexComponent( (BaseAddon) this, 2300, -2, 0, 5, 1044, -1, "", 1);// 84
			AddComplexComponent( (BaseAddon) this, 3205, -4, 2, 2, 2128, -1, "", 1);// 85
			AddComplexComponent( (BaseAddon) this, 3334, -6, -2, 0, 2125, -1, "", 1);// 86
			AddComplexComponent( (BaseAddon) this, 3154, 2, -2, 0, 155, -1, "", 1);// 87
			AddComplexComponent( (BaseAddon) this, 2964, -1, -1, 5, 1509, -1, "", 1);// 88
			AddComplexComponent( (BaseAddon) this, 2963, -1, 0, 5, 1509, -1, "", 1);// 89
			AddComplexComponent( (BaseAddon) this, 10314, -1, 1, 6, 56, -1, "", 1);// 90
			AddComplexComponent( (BaseAddon) this, 10314, -1, -2, 5, 56, -1, "", 1);// 91

		}

		public SwampBridgeAddon( Serial serial ) : base( serial )
		{
		}

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource)
        {
            AddComplexComponent(addon, item, xoffset, yoffset, zoffset, hue, lightsource, null, 1);
        }

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource, string name, int amount)
        {
            AddonComponent ac;
            ac = new AddonComponent(item);
            if (name != null && name.Length > 0)
                ac.Name = name;
            if (hue != 0)
                ac.Hue = hue;
            if (amount > 1)
            {
                ac.Stackable = true;
                ac.Amount = amount;
            }
            if (lightsource != -1)
                ac.Light = (LightType) lightsource;
            addon.AddComponent(ac, xoffset, yoffset, zoffset);
        }

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class SwampBridgeAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new SwampBridgeAddon();
			}
		}

		[Constructable]
		public SwampBridgeAddonDeed()
		{
			Name = "SwampBridge";
		}

		public SwampBridgeAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}